<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATgAAACACAMAAACoT4X0AAAABGdBTUEAALGPC/xhBQAAANhQTFRF////
        LS0tLC4t2MmI2MmG9/f3///92siGysrK2siI18iF2MiK2MmE9PHg6uTCe3t76eG8lpaWVFRUiIiIOTk5
        o6OjYWFhNDQ0+fn57ufK19fX8vLyQEBA4tak5t20v7+/5ubmS0tLsLCw3NCWcXFx3t7eRUVFg4ODwMDA
        tra2k5OTWVlZn5+ff39/ampq9fHlSEo/uK13i4Fd9O7Y28+VeHNTnZZoyruCwLV9qp9xX1pG3daiODkz
        zMKEgHtdV1FBtbCIc3FknJN008udNTY64t3HPDwybGhN61OCggAAEPVJREFUeF7tnQtX20gShfWyhCzx
        trGxDZhXCJDg8MiTJDM7u5v5//9o760qPWzJYJKz5+zs9JfESN0t4b6urq5qSY7ncDgcDofD4XA4HH8J
        xkd757bpWI3O5cXN8cD3BydW4FiJtVe+HwRBb/eoYyXeaGwbjuUcwdag2/XU9vvY6L+2HcdS1gaULdgZ
        F+a22+t7l7u241jGdCL2FgT+sZWc9Pyds2LHsYThNTS7OH/d7/dLtzY+9n3fTbBPcwZzO7PtkiMIt2bb
        jlbeQqJJYwbtoHRk2442dqGQ37edkuEZ5tkj23G0cELdXg1tr+INhGvI6SgZT/ygXSEoum2bjiZvGYT0
        2nIEuL5L23Q0WGP85rdFup2e7xd5hGOR4Q7D3kGbQCdIXG3T0eCNJAybtjfHXhBMbNPRoCfCtYVrU9Q4
        i1vGlCmq32pw26hxFreMSxrcq9Zlt2NU7dm2Y5FNGlyRHoxPagqKLbowbhkIfgNf5Rr1b/xJtebbp3Au
        x1/CiOoMuDU84gqJP9ndfqt2d4OqV9xwtMAJIOBq5fCMCSul8/0B59gxEtXWsNhB9ijcDXTjwhKgcIMj
        WhxGqlvGXI5caLjSNUsC4QYyVQy5/Ovm1GWIiwtecwVYocXJOoks0bnFuGWciHAddWhEhipGqizRuSs1
        S7mgVL2hOjQik8OI1wqBW1JaCqYEWNwJJldDhRvR9fk71sjRBJ4Mwu3oyCQU7mb8iqW+u4q/nCuVa4xJ
        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
        fwDI9f6mSmlwFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>